name: CI (Coq)

on:
  push:
  pull_request:
  schedule:
    - cron: '0 0 1 * *'

jobs:
  build:

    strategy:
      fail-fast: false
      matrix:
        env:
        - { COQ_VERSION: "master", COQ_PACKAGE: "coq libcoq-core-ocaml-dev"         , SKIP_VALIDATE: "1", PPA: "ppa:jgross-h/coq-master-daily", EXTRA_GH_REPORTIFY: "--warnings" }
        - { COQ_VERSION: "v8.15" , COQ_PACKAGE: "coq libcoq-ocaml-dev"              , SKIP_VALIDATE: "1", PPA: "ppa:jgross-h/coq-8.15-daily" }
        os: ['ubuntu-20.04']
        include:
        - env: { COQ_VERSION: "Ubuntu LTS", COQ_PACKAGE: "coq libcoq-ocaml-dev"     , SKIP_VALIDATE: "1", COQCHKEXTRAFLAGS: ""                      , PPA: "" }
          os: 'ubuntu-22.04'

    runs-on: ${{ matrix.os }}
    env: ${{ matrix.env }}
    name: ${{ matrix.env.COQ_VERSION }}

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: install Coq
      run: |
        if [ ! -z "$PPA" ]; then sudo add-apt-repository "$PPA" -y; fi
        sudo apt-get -o Acquire::Retries=30 update -q
        sudo apt-get -o Acquire::Retries=30 install ocaml-findlib $COQ_PACKAGE -y --allow-unauthenticated
    - name: echo build params
      run: |
        echo "::group::lscpu"
        lscpu
        echo "::endgroup::"
        echo "::group::uname -a"
        uname -a
        echo "::endgroup::"
        echo "::group::lsb_release -a"
        lsb_release -a
        echo "::endgroup::"
        echo "::group::ocamlc -config"
        ocamlc -config
        echo "::endgroup::"
        echo "::group::coqc --config"
        coqc --config
        echo "::endgroup::"
        echo "::group::coqc --version"
        coqc --version
        echo "::endgroup::"
        echo "::group::true | coqtop"
        true | coqtop
        echo "::endgroup::"
    - name: all
      run: etc/ci/github-actions-make.sh ${EXTRA_GH_REPORTIFY} -j2 all
    - name: display timing info
      run: cat time-of-build-pretty.log
    - name: display per-line timing info
      run: etc/ci/github-actions-display-per-line-timing.sh
    - name: validate
      run: make TIMED=1 validate COQCHKFLAGS="-o"
      if: matrix.env.SKIP_VALIDATE == '' && github.event_name != 'pull_request'
    - name: install
      run: sudo make install
